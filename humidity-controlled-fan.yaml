blueprint:
  name: Humidity Controlled Fan
  description:
    Turn a fan on and off based on the difference in absolute humidity (g/m3) between temperature and humidity sensors and baseline temperature and humidity sensors.
  source_url: https://github.com/lymanepp/homeassistant-blueprints/blob/main/humidity-controlled-fan.yaml
  domain: automation
  input:
    humidity_sensor:
      name: Humidity Sensor
      description:
        A sensor that measures the humidity of the area to be vented, for
        example the shower
      selector:
        entity:
          domain: sensor
          device_class: humidity
    temperature_sensor:
      name: Temperature Sensor
      description:
        A sensor that measures the temperature of the area to be vented,
        for example the shower
      selector:
        entity:
          domain: sensor
          device_class: temperature
    reference_humidity_sensor:
      name: Reference Humidity Sensor
      description:
        A sensor that indicates the baseline humidity of the area outside
        of the vented, for example the walkway outside the shower
      selector:
        entity:
          domain: sensor
          device_class: humidity
      default: []
    reference_temperature_sensor:
      name: Reference Temperature Sensor
      description:
        A sensor that indicates the baseline temperature of the area outside
        of the vented, for example the walkway outside the shower
      selector:
        entity:
          domain: sensor
          device_class: temperature
      default: []
    fan_switch:
      name: Fan Switch
      description: A switch that turns the fan on and off
      selector:
        entity:
          domain: switch
    rising_threshold:
      name: Rising Threshold (in g/m3)
      description:
        How many gram/m3 above the reference humidity the sensor can rise
        before the fan is turned on
      selector:
        number:
          min: 0.0
          max: 3.0
          mode: slider
          step: 0.1
      default: 1.1
    falling_threshold:
      name: Falling Threshold
      description:
        How many gram/m3 above the reference humidity the sensor must fall
        to before the fan is turned off
      selector:
        number:
          min: 0.0
          max: 3.0
          mode: slider
          step: 0.1
      default: 0.9
trigger:
  - entity_id: !input "humidity_sensor"
    platform: state
  - entity_id: !input "temperature_sensor"
    platform: state
  - entity_id: !input "reference_humidity_sensor"
    platform: state
  - entity_id: !input "reference_temperature_sensor"
    platform: state
  - entity_id: !input "fan_switch"
    platform: state
condition:
  - condition: template
    value_template: "{{ mode != switch_state }}"
action:
  - service: switch.turn_{{mode}}
    entity_id: !input "fan_switch"
variables:
  temperature_sensor: !input "temperature_sensor"
  humidity_sensor: !input "humidity_sensor"
  reference_temperature_sensor: !input "reference_temperature_sensor"
  reference_humidity_sensor: !input "reference_humidity_sensor"
  fan_switch: !input "fan_switch"
  switch_state: "{{ states(fan_switch) }}"
  rising_threshold: !input "rising_threshold"
  falling_threshold: !input "falling_threshold"
  abs_humid_ref: >
    {% set rh, tC = states(reference_humidity_sensor), states(reference_temperature_sensor) %}
    {% if rh == 'unknown' or tC == 'unknown' %}unknown{% else %}
      {% set rh, tC = rh|float, tC|float %}
      {% if is_state_attr(reference_temperature_sensor, 'unit_of_measurement', '°F') %}
        {% set tC = (tC-32.0)/9*5 %}
      {% endif %}
      {{ (rh*6.112*2.1674*e**((tC*17.67)/(tC+243.5))/(tC+273.15))|round(2) }}
    {% endif %}
  abs_humid: >
    {% set rh, tC = states(humidity_sensor), states(temperature_sensor) %}
    {% if rh == 'unknown' or tC == 'unknown' %}unknown{% else %}
      {% set rh, tC = rh|float, tC|float %}
      {% if is_state_attr(temperature_sensor, 'unit_of_measurement', '°F') %}
        {% set tC = (tC-32.0)/9*5 %}
      {% endif %}
      {{ (rh*6.112*2.1674*e**((tC*17.67)/(tC+243.5))/(tC+273.15))|round(2) }}
    {% endif %}
  difference: "{{ abs_humid|float - abs_humid_ref|float }}"
  mode: >
    {% if switch_state == 'off' and difference|float > rising_threshold|float
    %}on{% elif switch_state == 'on' and difference|float > falling_threshold|float
    %}on{% else %}off{% endif %}
mode: single
